'''
/*
 * Este es un reto especial por Halloween.
 * Te encuentras explorando una mansi√≥n abandonada llena de habitaciones.
 * En cada habitaci√≥n tendr√°s que resolver un acertijo para poder avanzar a la siguiente.
 * Tu misi√≥n es encontrar la habitaci√≥n de los dulces.
 *
 * Se trata de implementar un juego interactivo de preguntas y respuestas por terminal.
 * (Tienes total libertad para ser creativo con los textos)
 *
 * - üè∞ Casa: La mansi√≥n se corresponde con una estructura cuadrada 4 x 4
 *   que deber√°s modelar. Las habitaciones de puerta y dulces no tienen enigma.
 *   (16 habitaciones, siendo una de entrada y otra donde est√°n los dulces)
 *   Esta podr√≠a ser una representaci√≥n:
 *   üö™‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è
 *   ‚¨úÔ∏èüëª‚¨úÔ∏è‚¨úÔ∏è
 *   ‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüëª
 *   ‚¨úÔ∏è‚¨úÔ∏èüç≠‚¨úÔ∏è
 * - ‚ùì Enigmas: Cada habitaci√≥n propone un enigma aleatorio que deber√°s responder con texto.
 *   Si no lo aciertas no podr√°s desplazarte.
 * - üß≠ Movimiento: Si resuelves el enigma se te preguntar√° a donde quieres desplazarte.
 *   (Ejemplo: norte/sur/este/oeste. S√≥lo deben proporcionarse las opciones posibles)
 * - üç≠ Salida: Sales de la casa si encuentras la habitaci√≥n de los dulces.
 * - üëª (Bonus) Fantasmas: Existe un 10% de que en una habitaci√≥n aparezca un fantasma y
 *   tengas que responder dos preguntas para salir de ella.
 */
'''

import random

def generarMansion():
    mansion = [["‚¨úÔ∏è" for _ in range(4)] for _ in range(4)]
    mansion[random.randint(0, 3)][random.randint(0, 3)] = "üö™"
    mansion[random.randint(0, 3)][random.randint(0, 3)] = "üç≠"
    for _ in range(2):
        x, y = random.randint(0, 3), random.randint(0, 3)
        while mansion[x][y] != "‚¨úÔ∏è":
            x, y = random.randint(0, 3), random.randint(0, 3)
        mansion[x][y] = "üëª"
    return mansion

mansion = generarMansion()

def generarEnigma():
    enigmas = [
        {"pregunta": "¬øQu√© tiene ojos pero no puede ver?", "respuesta": "Una aguja"},
        {"pregunta": "¬øQu√© tiene alas pero no puede volar?", "respuesta": "Una carta"},
        {"pregunta": "¬øQu√© es algo que siempre sube y nunca baja?", "respuesta": "Tu edad"},
        {"pregunta": "¬øCu√°l es el animal m√°s antiguo?", "respuesta": "La cebra"},
        {"pregunta": "Tengo ciudades, pero no tengo casas. Tengo monta√±as, pero no tengo √°rboles. Tengo agua, pero no barcos. ¬øQu√© soy?", "respuesta": "Un mapa"},
        {"pregunta": "Puedo ser largo o corto; puedo ser r√°pida o lenta. Puedo estar en tu mano o en tu pie. ¬øQu√© soy?", "respuesta": "Una sombra"},
        {"pregunta": "Todos me necesitan, pero a nadie le gusto. ¬øQu√© soy?", "respuesta": "Un consejo"},
        {"pregunta": "Siempre estoy delante de ti, pero no puedes verme. Nunca hablo, pero siempre te escucho. ¬øQu√© soy?", "respuesta": "Tu futuro"},
        {"pregunta": "¬øQu√© se puede romper, aunque nunca se haya dicho ni una palabra?", "respuesta": "Un coraz√≥n"},
        {"pregunta": "¬øQu√© tiene llaves pero no puede abrir cerraduras?", "respuesta": "Un piano"},
        {"pregunta": "Puedes encontrarme en la oscuridad, pero nunca en la luz. No tengo forma ni color, pero puedes sentarme en tu mano. ¬øQu√© soy?", "respuesta": "El sue√±o"},
        {"pregunta": "Tengo un mar pero no tengo agua. Tengo una jungla pero no tengo √°rboles. Tengo un desierto pero no tengo arena. ¬øQu√© soy?", "respuesta": "Un mapa del mundo"},
        {"pregunta": "Siempre estoy corriendo, pero nunca me canso. Siempre estoy hablando, pero nunca digo una palabra. ¬øQu√© soy?", "respuesta": "Un rio"},
        {"pregunta": "A veces soy fuerte y a veces soy d√©bil. A veces tengo raz√≥n y a veces tengo que callar. ¬øQu√© soy?", "respuesta": "La voz"},
        {"pregunta": "Soy un agujero en el agua, pero mantengo el agua fuera. ¬øQu√© soy?", "respuesta": "Un barco"},
        {"pregunta": "Puedes romperme sin tocar ni una sola vez. ¬øQu√© soy?", "respuesta": "Un suspiro"}
    ]
    return random.choice(enigmas)

def resolverEnigma(enigma):
    print(enigma["pregunta"])
    respuestaUsuario = input("Tu respuesta: ").lower()
    if respuestaUsuario == enigma["respuesta"].lower():
        return True
    else:
        print("Respuesta incorrecta. Intenta de nuevo.")
        return False

def juego():
    print("¬°Bienvenido a la mansi√≥n abandonada!\n Tu misi√≥n es encontrar la habitaci√≥n de los dulces para salir.")
    x,y = 0,0
    while True:
        habitacion = mansion[x][y]
        if habitacion == "üëª":
            print("¬°Oh no! Te encuentras con un fantasma. Debes responder 2 preguntas para salir de la habitaci√≥n")
            enigmaU = generarEnigma()
            enigmaD = generarEnigma()
            if resolverEnigma(enigmaU) and resolverEnigma(enigmaD):
                print("¬°Respuestas correctas! Puedes continuar")
            else:
                print("¬°Oh no! Has fallado, el fantasma te atrapa.")
                break
        elif habitacion == "‚¨úÔ∏è":
            enigma = generarEnigma()
            while not resolverEnigma(enigma):
                enigma = generarEnigma()
            print("¬°Enigma resuelto! Puedes continuar con tu b√∫squeda.")
        elif habitacion == "üç≠":
            print("¬°Felicidades! Has encontrado la habitaci√≥n de los dulces. ¬°Ganaste el juego!")
            break
        direccion = input("¬øA d√≥nde quieres ir? (norte/sur/oeste/este): ").lower()
        if direccion == "norte" and x > 0:
            x -= 1
        elif direccion == "sur" and x < 3:
            x += 1
        elif direccion == "este" and y < 3:
            y += 1
        elif direccion == "oeste" and y > 0:
            y -= 1
        else:
            print("Direcci√≥n no v√°lida. Intenta de nuevo.")

juego()